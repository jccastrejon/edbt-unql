/*
* generated by Xtext
*/
grammar InternalUnql;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package fr.imag.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package fr.imag.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import fr.imag.services.UnqlGrammarAccess;

}

@parser::members {
 
 	private UnqlGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(UnqlGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleProgram
entryRuleProgram 
:
{ before(grammarAccess.getProgramRule()); }
	 ruleProgram
{ after(grammarAccess.getProgramRule()); } 
	 EOF 
;

// Rule Program
ruleProgram
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getProgramAccess().getGroup()); }
(rule__Program__Group__0)
{ after(grammarAccess.getProgramAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDefinition
entryRuleDefinition 
:
{ before(grammarAccess.getDefinitionRule()); }
	 ruleDefinition
{ after(grammarAccess.getDefinitionRule()); } 
	 EOF 
;

// Rule Definition
ruleDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDefinitionAccess().getGroup()); }
(rule__Definition__Group__0)
{ after(grammarAccess.getDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConnection
entryRuleConnection 
:
{ before(grammarAccess.getConnectionRule()); }
	 ruleConnection
{ after(grammarAccess.getConnectionRule()); } 
	 EOF 
;

// Rule Connection
ruleConnection
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConnectionAccess().getGroup()); }
(rule__Connection__Group__0)
{ after(grammarAccess.getConnectionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSelect
entryRuleSelect 
:
{ before(grammarAccess.getSelectRule()); }
	 ruleSelect
{ after(grammarAccess.getSelectRule()); } 
	 EOF 
;

// Rule Select
ruleSelect
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSelectAccess().getGroup()); }
(rule__Select__Group__0)
{ after(grammarAccess.getSelectAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Definition__TypeAlternatives_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getTypeGraphKeyword_3_0_0()); }

	'graph' 

{ after(grammarAccess.getDefinitionAccess().getTypeGraphKeyword_3_0_0()); }
)

    |(
{ before(grammarAccess.getDefinitionAccess().getTypeDocumentKeyword_3_0_1()); }

	'document' 

{ after(grammarAccess.getDefinitionAccess().getTypeDocumentKeyword_3_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Program__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Program__Group__0__Impl
	rule__Program__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getDefinitionsKeyword_0()); }

	'[Definitions]' 

{ after(grammarAccess.getProgramAccess().getDefinitionsKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Program__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Program__Group__1__Impl
	rule__Program__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getDefinitionsAssignment_1()); }
(rule__Program__DefinitionsAssignment_1)*
{ after(grammarAccess.getProgramAccess().getDefinitionsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Program__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Program__Group__2__Impl
	rule__Program__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getConnectionsKeyword_2()); }

	'[Connections]' 

{ after(grammarAccess.getProgramAccess().getConnectionsKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Program__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Program__Group__3__Impl
	rule__Program__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getConnectionsAssignment_3()); }
(rule__Program__ConnectionsAssignment_3)*
{ after(grammarAccess.getProgramAccess().getConnectionsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Program__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Program__Group__4__Impl
	rule__Program__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getQueriesKeyword_4()); }

	'[Queries]' 

{ after(grammarAccess.getProgramAccess().getQueriesKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Program__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Program__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getQueriesAssignment_5()); }
(rule__Program__QueriesAssignment_5)*
{ after(grammarAccess.getProgramAccess().getQueriesAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Definition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group__0__Impl
	rule__Definition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getDefineKeyword_0()); }

	'define' 

{ after(grammarAccess.getDefinitionAccess().getDefineKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Definition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group__1__Impl
	rule__Definition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getNameAssignment_1()); }
(rule__Definition__NameAssignment_1)
{ after(grammarAccess.getDefinitionAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Definition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group__2__Impl
	rule__Definition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getAsKeyword_2()); }

	'as' 

{ after(grammarAccess.getDefinitionAccess().getAsKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Definition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getTypeAssignment_3()); }
(rule__Definition__TypeAssignment_3)
{ after(grammarAccess.getDefinitionAccess().getTypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Connection__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Connection__Group__0__Impl
	rule__Connection__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAccess().getConnectKeyword_0()); }

	'connect' 

{ after(grammarAccess.getConnectionAccess().getConnectKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Connection__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Connection__Group__1__Impl
	rule__Connection__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAccess().getNameAssignment_1()); }
(rule__Connection__NameAssignment_1)
{ after(grammarAccess.getConnectionAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Connection__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Connection__Group__2__Impl
	rule__Connection__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAccess().getUrlKeyword_2()); }

	'url' 

{ after(grammarAccess.getConnectionAccess().getUrlKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Connection__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Connection__Group__3__Impl
	rule__Connection__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAccess().getUrlAssignment_3()); }
(rule__Connection__UrlAssignment_3)
{ after(grammarAccess.getConnectionAccess().getUrlAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Connection__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Connection__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAccess().getGroup_4()); }
(rule__Connection__Group_4__0)?
{ after(grammarAccess.getConnectionAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Connection__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Connection__Group_4__0__Impl
	rule__Connection__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAccess().getUsernameKeyword_4_0()); }

	'username' 

{ after(grammarAccess.getConnectionAccess().getUsernameKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Connection__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Connection__Group_4__1__Impl
	rule__Connection__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAccess().getUsernameAssignment_4_1()); }
(rule__Connection__UsernameAssignment_4_1)
{ after(grammarAccess.getConnectionAccess().getUsernameAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Connection__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Connection__Group_4__2__Impl
	rule__Connection__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAccess().getPasswordKeyword_4_2()); }

	'password' 

{ after(grammarAccess.getConnectionAccess().getPasswordKeyword_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Connection__Group_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Connection__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group_4__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAccess().getPasswordAssignment_4_3()); }
(rule__Connection__PasswordAssignment_4_3)
{ after(grammarAccess.getConnectionAccess().getPasswordAssignment_4_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Select__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Select__Group__0__Impl
	rule__Select__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectAccess().getSelectKeyword_0()); }

	'select' 

{ after(grammarAccess.getSelectAccess().getSelectKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Select__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Select__Group__1__Impl
	rule__Select__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectAccess().getAttributesAssignment_1()); }
(rule__Select__AttributesAssignment_1)*
{ after(grammarAccess.getSelectAccess().getAttributesAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Select__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Select__Group__2__Impl
	rule__Select__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectAccess().getFromKeyword_2()); }

	'from' 

{ after(grammarAccess.getSelectAccess().getFromKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Select__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Select__Group__3__Impl
	rule__Select__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectAccess().getRelationsAssignment_3()); }
(rule__Select__RelationsAssignment_3)*
{ after(grammarAccess.getSelectAccess().getRelationsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Select__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Select__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectAccess().getGroup_4()); }
(rule__Select__Group_4__0)?
{ after(grammarAccess.getSelectAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Select__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Select__Group_4__0__Impl
	rule__Select__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectAccess().getWhereKeyword_4_0()); }

	'where' 

{ after(grammarAccess.getSelectAccess().getWhereKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Select__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Select__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectAccess().getConditionsAssignment_4_1()); }
(rule__Select__ConditionsAssignment_4_1)*
{ after(grammarAccess.getSelectAccess().getConditionsAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Program__DefinitionsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getDefinitionsDefinitionParserRuleCall_1_0()); }
	ruleDefinition{ after(grammarAccess.getProgramAccess().getDefinitionsDefinitionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Program__ConnectionsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getConnectionsConnectionParserRuleCall_3_0()); }
	ruleConnection{ after(grammarAccess.getProgramAccess().getConnectionsConnectionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Program__QueriesAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getQueriesSelectParserRuleCall_5_0()); }
	ruleSelect{ after(grammarAccess.getProgramAccess().getQueriesSelectParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getNameSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getDefinitionAccess().getNameSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__TypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getTypeAlternatives_3_0()); }
(rule__Definition__TypeAlternatives_3_0)
{ after(grammarAccess.getDefinitionAccess().getTypeAlternatives_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAccess().getNameSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getConnectionAccess().getNameSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__UrlAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAccess().getUrlSTRINGTerminalRuleCall_3_0()); }
	RULE_STRING{ after(grammarAccess.getConnectionAccess().getUrlSTRINGTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__UsernameAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAccess().getUsernameSTRINGTerminalRuleCall_4_1_0()); }
	RULE_STRING{ after(grammarAccess.getConnectionAccess().getUsernameSTRINGTerminalRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__PasswordAssignment_4_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAccess().getPasswordSTRINGTerminalRuleCall_4_3_0()); }
	RULE_STRING{ after(grammarAccess.getConnectionAccess().getPasswordSTRINGTerminalRuleCall_4_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Select__AttributesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectAccess().getAttributesSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getSelectAccess().getAttributesSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Select__RelationsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectAccess().getRelationsSTRINGTerminalRuleCall_3_0()); }
	RULE_STRING{ after(grammarAccess.getSelectAccess().getRelationsSTRINGTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Select__ConditionsAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectAccess().getConditionsSTRINGTerminalRuleCall_4_1_0()); }
	RULE_STRING{ after(grammarAccess.getSelectAccess().getConditionsSTRINGTerminalRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


