/*
* generated by Xtext
*/
package fr.imag.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import fr.imag.services.UnqlGrammarAccess;

public class UnqlParser extends AbstractContentAssistParser {
	
	@Inject
	private UnqlGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected fr.imag.ui.contentassist.antlr.internal.InternalUnqlParser createParser() {
		fr.imag.ui.contentassist.antlr.internal.InternalUnqlParser result = new fr.imag.ui.contentassist.antlr.internal.InternalUnqlParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getDefinitionAccess().getTypeAlternatives_3_0(), "rule__Definition__TypeAlternatives_3_0");
					put(grammarAccess.getProgramAccess().getGroup(), "rule__Program__Group__0");
					put(grammarAccess.getDefinitionAccess().getGroup(), "rule__Definition__Group__0");
					put(grammarAccess.getConnectionAccess().getGroup(), "rule__Connection__Group__0");
					put(grammarAccess.getConnectionAccess().getGroup_4(), "rule__Connection__Group_4__0");
					put(grammarAccess.getSelectAccess().getGroup(), "rule__Select__Group__0");
					put(grammarAccess.getSelectAccess().getGroup_4(), "rule__Select__Group_4__0");
					put(grammarAccess.getProgramAccess().getDefinitionsAssignment_1(), "rule__Program__DefinitionsAssignment_1");
					put(grammarAccess.getProgramAccess().getConnectionsAssignment_3(), "rule__Program__ConnectionsAssignment_3");
					put(grammarAccess.getProgramAccess().getQueriesAssignment_5(), "rule__Program__QueriesAssignment_5");
					put(grammarAccess.getDefinitionAccess().getNameAssignment_1(), "rule__Definition__NameAssignment_1");
					put(grammarAccess.getDefinitionAccess().getTypeAssignment_3(), "rule__Definition__TypeAssignment_3");
					put(grammarAccess.getConnectionAccess().getNameAssignment_1(), "rule__Connection__NameAssignment_1");
					put(grammarAccess.getConnectionAccess().getUrlAssignment_3(), "rule__Connection__UrlAssignment_3");
					put(grammarAccess.getConnectionAccess().getUsernameAssignment_4_1(), "rule__Connection__UsernameAssignment_4_1");
					put(grammarAccess.getConnectionAccess().getPasswordAssignment_4_3(), "rule__Connection__PasswordAssignment_4_3");
					put(grammarAccess.getSelectAccess().getAttributesAssignment_1(), "rule__Select__AttributesAssignment_1");
					put(grammarAccess.getSelectAccess().getRelationsAssignment_3(), "rule__Select__RelationsAssignment_3");
					put(grammarAccess.getSelectAccess().getConditionsAssignment_4_1(), "rule__Select__ConditionsAssignment_4_1");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			fr.imag.ui.contentassist.antlr.internal.InternalUnqlParser typedParser = (fr.imag.ui.contentassist.antlr.internal.InternalUnqlParser) parser;
			typedParser.entryRuleProgram();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public UnqlGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(UnqlGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
